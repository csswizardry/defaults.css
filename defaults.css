/* ==========================================================================
   #DEFAULTS.CSS
   ========================================================================== */

/**
 * defaults.css is part reset, part normalisation.
 *
 * It is designed to give a consistent baseline and some lightly opinionated,
 * ergonomic improvements.
 *
 * defaults.css is benchmarked against Baseline browsers and uses modern
 * patterns and paradigms.
 */





/* Comfortable `box-sizing` defaults.
   ========================================================================== */

html {
  box-sizing: border-box;
}

* {

  &,
  &::before,
  &::after {
    box-sizing: inherit;
  }

}





/* Prevent text-rescaling on device orientation changes. Only scope the rule to
 * relevant browser to reduce DevTools noise.
   ========================================================================== */

@supports (-webkit-text-size-adjust: none) {

  html {
    -webkit-text-size-adjust: none;
  }

}

@supports (-moz-text-size-adjust: none) {

  html {
    -moz-text-size-adjust: none;
  }

}

@supports (text-size-adjust: none) {

  html {
    text-size-adjust: none;
  }

}





/* Remove `margin` and `padding` from all relevant elements.
 *
 * Each element listed carries some `margin` or `padding` in one or more
 * Baseline browsers.
   ========================================================================== */

/* Text Elements */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,

/* Lists */
ul, ol, dl, dd,

/* Tables */
th, td,

/* Containers */
body, figure, dialog,

/* Form Elements */
fieldset, legend,
input, textarea, button, select, option {
  margin:  0;
  padding: 0;
}





/* Set consistent `font-family` across browsers.
 *
 * For some reason, Firefox for Android sets `sans-serif` as its default.
 * Converge on the more common `serif` default.
   ========================================================================== */

html {
  font-family: serif;
}





/* Set consistent `h1` sizing across browsers.
 *
 * Blink and WebKit style nested `h1`s differently. Let’s normalise to the
 * generic use-case in keeping with Firefox. Only scope the rule to relevant
 * browser to reduce DevTools noise.
   ========================================================================== */

@supports selector(:-webkit-any(article, aside, nav, section) h1) {

  h1 {
    font-size: 2em;
  }

}





/* Set consistent bolding across browsers.
 *
 * Firefox and Blink both set `bolder`, so nested elements compound. Safari
 * sets `bold` which is more predictable/desirable.
   ========================================================================== */

strong, b {
  font-weight: bold;
}





/* More predictable styling for code-like elements.
 *
 * This has always been a strange one. Browsers tend to set a smaller font size
 * for code-like elements. The double-`monospace` hack fixes that, and the
 * `font-size: inherit;` keeps the size contextual—useful for `code` in
 * headings, etc.
   ========================================================================== */

pre, code, kbd, samp, output {
  font-family: monospace, monospace;
  font-size: inherit;
}





/* Set consistent `hr` styling across browsers.
 *
 * Safari only sets `border-top-*` styles and Blink doesn’t set `color: gray;`.
 * This ruleset normalises across all browsers.
   ========================================================================== */

hr {
  color: gray;
  border: 1px inset;
}





/* More comfortable `table` defaults.
 *
 * `tables`’ default styling has always looked a little old-school. This sets
 * them to something a little more palatable.
   ========================================================================== */

table {
    border-collapse: collapse;
  border-spacing: 0;
}





/* Ensure form elements inherit relevant font styles.
 *
 * TODO: github.com/csswizardry/defaults.css/issues/1
   ========================================================================== */

input, textarea, button, select, option {
  font: inherit;
  color: inherit;
}

::placeholder {
  color: inherit;
}
